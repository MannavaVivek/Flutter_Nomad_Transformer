import 'package:flutter/material.dart';
import 'package:go_router/go_router.dart';
import 'blog_post.dart';
import 'blog_content.dart';

class SearchScreen extends StatefulWidget {
  const SearchScreen({Key? key}) : super(key: key);

  @override
  _SearchScreenState createState() => _SearchScreenState();
}

class _SearchScreenState extends State<SearchScreen> {
  final TextEditingController _searchController = TextEditingController();
  List<String> filteredPosts = [];

  @override
  void dispose() {
    _searchController.dispose();
    super.dispose();
  }

  List<String> _filterPosts(String searchQuery) {
    if (searchQuery.isEmpty) {
      return [];
    }

    final lowerCaseQuery = searchQuery.toLowerCase();

    return blogPosts.keys
        .where((postId) =>
            blogPosts[postId]!.city.toLowerCase().contains(lowerCaseQuery))
        .toList();
  }
@override
Widget build(BuildContext context) {
  return Scaffold(
    body: Column(
      crossAxisAlignment: CrossAxisAlignment.stretch,
      children: [
        Container(
          width: MediaQuery.of(context).size.width - 48,
          padding: EdgeInsets.symmetric(horizontal: 16, vertical: 8),
          margin: EdgeInsets.only(top: kToolbarHeight),
          decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(20),
            color: Colors.white,
          ),
          child: TextField(
            controller: _searchController,
            onChanged: (value) {
              setState(() {
                filteredPosts = _filterPosts(value);
              });
            },
            decoration: InputDecoration(
              hintText: 'Search...',
              border: InputBorder.none,
              suffixIcon: IconButton(
                icon: Icon(Icons.close),
                onPressed: () {
                  setState(() {
                    _searchController.clear();
                    filteredPosts.clear();
                  });
                  context.go('/');
                },
              ),
            ),
          ),
        ),
        Expanded(
          child: ListView.builder(
            itemCount: filteredPosts.length,
            itemBuilder: (context, index) {
              final postId = filteredPosts[index];
              final blogPost = blogPosts[postId];

              return Container(
                height: 80,
                color: Colors.white,
                child: ListTile(
                  title: Text(blogPost!.city),
                  subtitle: Text(blogPost.country),
                  onTap: () {
                    context.go('/post/${blogPost.postId}');
                  },
                ),
              );
            },
          ),
        ),
      ],
    ),
  );
}


}

